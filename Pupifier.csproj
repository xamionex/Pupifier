<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net48</TargetFramework>
    <AssemblyName>amione.Pupifier</AssemblyName>
    <Product>Pupifier</Product>
    <ProductDescription>Pupifier is a mod that allows you to become a slugpup in Rain World! This mod enhances your gameplay experience by enabling you to transform into a slugpup, offering a unique perspective and new challenges. Additionally, this mod was made for Rain Meadow but works normally as well!</ProductDescription>
    <ModVersion>0.1.4</ModVersion>
    <Version>2.0.8</Version>
    <LangVersion>10.0</LangVersion>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <Configurations>Debug;Release</Configurations>
    <RootNamespace>Pupifier</RootNamespace>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <PathMap>$(MSBuildThisFileDirectory.Replace(',', ',,').Replace('=', '=='))=/</PathMap>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="lib\*.dll" Private="False" />
  </ItemGroup>

  <ItemGroup>
    <None Remove=".gitattributes" />
    <None Remove=".gitignore" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Settings.Designer.cs">
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <ItemGroup>
      <PluginInfoLines Include="internal static class PluginInfo {" />
      <PluginInfoLines Include="    public const string PluginGUID = &quot;$(AssemblyName)&quot;%3B" />
      <PluginInfoLines Include="    public const string PluginName = &quot;$(Product)&quot;%3B" />
      <PluginInfoLines Include="    public const string PluginVersion = &quot;$(ModVersion)&quot;%3B" />
      <PluginInfoLines Include="}" />
    </ItemGroup>
    <WriteLinesToFile File="$(ProjectDir)PluginInfo.cs" Lines="@(PluginInfoLines)" Overwrite="true" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <BuildFiles Include="$(Outdir)\*" />
    </ItemGroup>
    <Copy SourceFiles="@(BuildFiles)" DestinationFolder="$(ProjectDir)$(RootNamespace)\plugins" />
  </Target>

  <UsingTask TaskName="RegexReplaceTask" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" TaskFactory="RoslynCodeTaskFactory">
    <ParameterGroup>
      <InputFile />
      <VersionValue Required="true" />
      <AssemblyName Required="true" />
      <ProductDescription Required="true" />
      <Product Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          string content = File.ReadAllText(InputFile);

          // Replace "version"
          content = Regex.Replace(content, @"""version"":\s*""[^""]*""", $@"""version"": ""{VersionValue}""");

          // Replace "id"
          content = Regex.Replace(content, @"""id"":\s*""[^""]*""", $@"""id"": ""{AssemblyName}""");

          // Replace "name"
          content = Regex.Replace(content, @"""name"":\s*""[^""]*""", $@"""name"": ""{Product}""");

          // Replace "description"
          content = Regex.Replace(content, @"""description"":\s*""[^""]*""", $@"""description"": ""{ProductDescription}""");

          File.WriteAllText(InputFile, content);
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="UpdateModInfo" AfterTargets="Build">
    <RegexReplaceTask 
      InputFile="$(ProjectDir)$(RootNamespace)\modinfo.json"
      VersionValue="$(ModVersion)"
      AssemblyName="$(AssemblyName)"
      ProductDescription="$(ProductDescription)"
      Product="$(Product)" />
  </Target>

  <Target Name="ZipProjectDirectory" AfterTargets="Build">
    <Exec Command="zip -r '$(ProjectDir)$(RootNamespace).zip' '$(ProjectDir)$(RootNamespace)'" Condition="'$(OS)' == 'Unix'" />
    <Exec Command="powershell -Command &quot;Compress-Archive -Path '$(ProjectDir)$(RootNamespace)' -DestinationPath '$(ProjectDir)$(RootNamespace).zip' -Force&quot;" Condition="'$(OS)' == 'Windows_NT'" />
  </Target>
</Project>