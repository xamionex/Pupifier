<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net48</TargetFramework>
    <AssemblyName>amione.RainMeadowPupifier</AssemblyName>
    <Product>Rain Meadow Pupifier</Product>
    <Version>2.0.8</Version>
    <ModVersion>0.0.1</ModVersion>
    <LangVersion>10.0</LangVersion>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <Configurations>Debug;Release</Configurations>
    <RootNamespace>RainMeadowPupifier</RootNamespace>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <PathMap>$(MSBuildThisFileDirectory.Replace(',', ',,').Replace('=', '=='))=/</PathMap>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="lib\*.dll" Private="False" />
  </ItemGroup>

  <ItemGroup>
    <None Remove=".gitattributes" />
    <None Remove=".gitignore" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Settings.Designer.cs">
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <ItemGroup>
      <PluginInfoLines Include="internal static class PluginInfo {" />
      <PluginInfoLines Include="    public const string PluginGUID = &quot;$(AssemblyName)&quot;%3B" />
      <PluginInfoLines Include="    public const string PluginName = &quot;$(Product)&quot;%3B" />
      <PluginInfoLines Include="    public const string PluginVersion = &quot;$(ModVersion)&quot;%3B" />
      <PluginInfoLines Include="}" />
    </ItemGroup>
    <WriteLinesToFile File="$(ProjectDir)PluginInfo.cs" Lines="@(PluginInfoLines)" Overwrite="true" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <BuildFiles Include="$(Outdir)\*" />
    </ItemGroup>
    <Copy SourceFiles="@(BuildFiles)" DestinationFolder="$(ProjectDir)$(RootNamespace)\plugins" />
  </Target>

  <Target Name="UpdateModInfo" AfterTargets="PostBuild">
    <!-- Read the lines from the modinfo.json file -->
    <ReadLinesFromFile File="$(ProjectDir)$(RootNamespace)\modinfo.json">
      <Output TaskParameter="Lines" ItemName="ModJsonLines" />
    </ReadLinesFromFile>

    <!-- Modify the lines using regex to update fields -->
    <ItemGroup>
      <UpdatedModJsonLines Include="@(ModJsonLines)">
      <Text>$([System.Text.RegularExpressions.Regex]::Replace('%(Identity)', '"version" *: *"[^"]*"', '"version": "$(ModVersion)"'))</Text>
      </UpdatedModJsonLines>
    </ItemGroup>

    <!-- Write the updated lines back to the file -->
    <WriteLinesToFile File="$(ProjectDir)$(RootNamespace)\modinfo.json" Lines="@(UpdatedModJsonLines->'%(Text)')" Overwrite="true" />
  </Target>
</Project>